apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-web-app-kubernetes
  title: Create Simple Web App with Kubernetes (React)
  description: Create a new WebApp project
  tags:
    - react
    - webapp
    - kubernetes
spec:
  owner: web@example.com
  type: website
  parameters:
    - title: Provide some simple information
      required:
        - app_name
        - description
      properties:
        app_name:
          title: App Name
          type: string
          description: Unique name of the application
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this app is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group

    - title: Choose your repository name
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

    - title: Inform your 
      description: |
        ## Arquitetura que ser√° criada

        ![EKS AWS Example](https://res.cloudinary.com/practicaldev/image/fetch/s--pAuP3U8B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn-images-1.medium.com/max/2000/1%2A0sLY3mEeoyTMIN_oRXzx-w.png).
        
      required:
        - kube_config
      properties:
        cluster_name: 
          title: Cluster Name
          type: string
        kube_config:
          title: Kube configuration to connection
          type: string
          ui:widget: password
        subnets:
          title: Public subnets to create ingress
          type: string
        aws_secret_access_key:
          title: AWS Secret Access Key
          type: string
          ui:widget: password
        aws_access_key_id:
          title: AWS Access Key ID
          type: string
          ui:widget: password
        docker_hub_username:
          title: Docker Hub Username
          type: string
        docker_hub_password:
          title: Docker Hub Password
          type: string
          ui:widget: password
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          app_name: ${{ parameters.app_name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          github_url: ${{ parameters.repoUrl }}
          subnets: ${{ parameters.subnets }}
          dns: "http://${{ parameters.app_name }}.gdantas.com.br"
          team: ${{ parameters.owner }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: "http://${{ parameters.app_name }}.gdantas.com.br"
        repoUrl: ${{ parameters.repoUrl }}
        secrets:
          KUBE_CONFIG_DATA: ${{ parameters.kube_config }}
          CLUSTER_NAME: ${{ parameters.cluster_name }}
          AWS_SECRET_ACCESS_KEY: ${{ parameters.aws_secret_access_key }}
          AWS_ACCESS_KEY_ID:  ${{ parameters.aws_access_key_id }}
          DOCKER_HUB_USERNAME: ${{ parameters.docker_hub_username }}
          DOCKER_HUB_PASSWORD: ${{ parameters.docker_hub_password }}

  output:
    links:
      - title: Go to Repository ;)
        url: ${{ steps.publish.output.remoteUrl }}
